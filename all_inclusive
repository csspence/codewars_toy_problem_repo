/*
Input:

a string strng
an array of strings arr
Output of function contain_all_rots(strng, arr) (or containAllRots or contain-all-rots):

a boolean true if all rotations of strng are included in arr (C returns 1)
false otherwise (C returns 0)
Examples:
contain_all_rots(
  "bsjq", ["bsjq", "qbsj", "sjqb", "twZNsslC", "jqbs"]) -> true

contain_all_rots(
  "Ajylvpy", ["Ajylvpy", "ylvpyAj", "jylvpyA", "lvpyAjy", "pyAjylv", "vpyAjyl", "ipywee"]) -> false)
Note:
Though not correct in a mathematical sense

we will consider that there are no rotations of strng == ""
and for any array arr: contain_all_rots("", arr) --> true
*/

const containAllRots = (strng, arr) => {
  console.log(strng);
  console.log(arr);
  let str = strng;
  let counter = 0;
  let placeholder;
  while(counter < strng.length - 1) {
    counter++;
    if(!arr.includes(str)) {
      return false;
    }
    placeholder = str.slice(str.length - 1);
    str = str.slice(0, str.length - 1);
    str = placeholder + str;
  }
  
  return true;
}
